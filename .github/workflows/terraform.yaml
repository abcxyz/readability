name: 'terraform'

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  schedule:
    - cron: '0 */4 * * *'
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

permissions:
  contents: 'read'
  id-token: 'write'

defaults:
  run:
    working-directory: './terraform'

jobs:
  terraform:
    name: 'terraform'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - name: 'mint token'
        id: 'mint-token'
        uses: 'abcxyz/github-token-minter/.github/actions/mint-token@main' # ratchet:exclude
        with:
          wif_provider: '${{ vars.TOKEN_MINTER_WIF_PROVIDER }}'
          wif_service_account: '${{ vars.TOKEN_MINTER_WIF_SERVICE_ACCOUNT }}'
          service_audience: '${{ vars.TOKEN_MINTER_SERVICE_AUDIENCE }}'
          service_url: '${{ vars.TOKEN_MINTER_SERVICE_URL }}'
          requested_permissions: |-
            {
              "scope": "terraform",
              "repositories": [],
              "permissions": {
                "members": "write"
              }
            }

      - uses: 'hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36' # ratchet:hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.6.x'

      - run: 'terraform init -upgrade'

      - run: 'terraform fmt -diff -check'

      - run: 'terraform validate'

      - run: 'terraform apply -auto-approve'
        if: ${{ github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
        env:
          GITHUB_TOKEN: '${{ steps.mint-token.outputs.token }}'
